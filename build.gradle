plugins {
    id 'java'
    id 'eclipse'
    id "org.jetbrains.gradle.plugin.idea-ext" version "1.0.1"
    id 'org.jetbrains.kotlin.jvm' version '1.9.20-RC'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'dev.thatlukinhasguy'
version = '1.3'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven { url "https://repo.panda-lang.org/releases" }
}

dependencies {
    compileOnly "com.velocitypowered:velocity-api:3.2.0-SNAPSHOT"
    annotationProcessor "com.velocitypowered:velocity-api:3.2.0-SNAPSHOT"
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.11'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'org.json:json:20230618'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

def templateSource = file('src/main/templates')
def templateDest = layout.buildDirectory.dir('generated/sources/templates')
def generateTemplates = tasks.register('generateTemplates', Copy) { task ->
    def props = [
            'version': project.version
    ]
    task.inputs.properties props

    task.from templateSource
    task.into templateDest
    task.expand props
}

sourceSets.main.java.srcDir(generateTemplates.map { it.outputs })

rootProject.idea.project.settings.taskTriggers.afterSync generateTemplates
project.eclipse.synchronizationTasks(generateTemplates)
kotlin {
    jvmToolchain(17)
}
